/**
 * @swagger
 * tags:
 *   name: Earnings
 *   description: Endpoints for retrieving earnings data
 */

const express = require("express");
const { EarningController } = require("../../controllers");
const { userMiddleware } = require('../../middlewares');
const { purchaseMiddleware } = require('../../middlewares');

const router = express.Router();

/**
 * @swagger
 * /earnings/user/{userId}:
 *   get:
 *     summary: Get earnings for a specific user
 *     tags: [Earnings]
 *     parameters:
 *       - in: path
 *         name: userId
 *         required: true
 *         schema:
 *           type: integer
 *         description: User ID
 *     responses:
 *       200:
 *         description: List of earnings for the user
 *       404:
 *         description: User not found
 */
router.get("/user/:userId", 
    userMiddleware.validateUserIdParam,
    EarningController.getEarningsByUserId);

/**
 * @swagger
 * /earnings/source/{userId}:
 *   get:
 *     summary: Get parent's earnings caused by this user's purchases
 *     tags: [Earnings]
 *     parameters:
 *       - in: path
 *         name: userId
 *         required: true
 *         schema:
 *           type: integer
 *         description: Purchaser's User ID
 *     responses:
 *       200:
 *         description: Earnings received by others from this user
 *       404:
 *         description: User not found
 */
router.get("/source/:userId", 
    userMiddleware.validateUserIdParam,
    EarningController.getEarningsBySourceUserId);

/**
 * @swagger
 * /earnings/purchase/{purchaseId}:
 *   get:
 *     summary: Get earnings generated by a specific purchase
 *     tags: [Earnings]
 *     parameters:
 *       - in: path
 *         name: purchaseId
 *         required: true
 *         schema:
 *           type: integer
 *         description: Purchase ID
 *     responses:
 *       200:
 *         description: Earnings related to a purchase
 *       404:
 *         description: Purchase not found
 */
router.get("/purchase/:purchaseId", 
    purchaseMiddleware.validatePurchaseIdParam,
    EarningController.getEarningsByPurchaseId);

/**
 * @swagger
 * /earnings/user/{userId}/total:
 *   get:
 *     summary: Get total earnings for a user
 *     tags: [Earnings]
 *     parameters:
 *       - in: path
 *         name: userId
 *         required: true
 *         schema:
 *           type: integer
 *         description: User ID
 *     responses:
 *       200:
 *         description: Total earnings amount
 *       404:
 *         description: User not found
 */
router.get("/user/:userId/total", 
    userMiddleware.validateUserIdParam,
    EarningController.getTotalEarningsByUserId);

module.exports = router;
